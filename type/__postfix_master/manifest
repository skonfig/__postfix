#!/bin/sh -e
#
# 2012-2014 Steven Armstrong (steven-cdist at armstrong.cc)
#
# This file is part of the skonfig set __mysql.
#
# This set is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This set is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this set. If not, see <http://www.gnu.org/licenses/>.
#


os=$(cat "${__global:?}/explorer/os")

case ${os}
in
   (debian|devuan|ubuntu|archlinux|scientific|centos)
      ;;
   (*)
      : "${__type:?}"  # make shellcheck happy
      echo "Your operating system (${os}) is currently not supported by this type (${__type##*/})." >&2
      echo 'Please contribute an implementation for it if you can.' >&2
      exit 1
      ;;
esac

__postfix

if test -f "${__object:?}/parameter/service"
then
	service=$(cat "${__object:?}/parameter/service")
else
	# default to object_id
	service=${__object_id:?}
fi

# NOTE: keep variables in sync in manifest,explorer,gencode-*
prefix="#cdist:${__object_name:?}"
suffix="#/cdist:${__object_name:?}"

# Generate entry for inclusion in master.cf
mkdir "${__object:?}/files"
entry="${__object:?}/files/entry"
(
   echo "${prefix}"
   if test -f "${__object:?}/parameter/comment"
   then
      echo "# $(cat "${__object:?}/parameter/comment")"
   fi
   printf '%s ' "${service}"
   for parameter in type private unpriv chroot wakeup maxproc
   do
      printf '%s ' "$(cat "${__object:?}/parameter/${parameter}")"
   done
   command=$(cat "${__object:?}/parameter/command")
   # ensure we have a trailing newline
   echo "${command}"
   options=$(cat "${__object:?}/parameter/option" 2>/dev/null || :)
   for option in ${options}
   do
      echo " -o ${option}"
   done
   echo "${suffix}"
) >"${entry}"

# Reload postfix after changes
if test ! -f "${__object:?}/parameter/noreload"
then
   state_should=$(cat "${__object:?}/parameter/state")
   if test ! -s "${__object:?}/explorer/entry"
   then
      state_is='absent'
   else
      state_is=$(diff -q "${entry}" "${__object:?}/explorer/entry" >/dev/null \
         && echo present \
         || echo changed)
   fi
   if test "${state_is}" != "${state_should}"
   then
      require=${__object_name:?} \
      __postfix_reload
   fi
fi
