#!/bin/sh -e
#
# 2012-2014 Steven Armstrong (steven-cdist at armstrong.cc)
# 2019 Nico Schottelius (nico-cdist at schottelius.org)
# 2025 Dennis Camera (dennis.camera at riiengineerinh.ch)
#
# This file is part of the skonfig set __postfix.
#
# This set is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This set is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this set. If not, see <http://www.gnu.org/licenses/>.
#

shquot() {
	sed -e "s/'/'\\\\''/g" -e "1s/^/'/" -e "\$s/\$/'/" <<-EOF
	$*
	EOF
}

os=$(cat "${__global:?}/explorer/os")

case ${os}
in
   (alpine|archlinux|centos|debian|devuan|suse|scientific|ubuntu)
      ;;
   (*)
      : "${__type:?}"  # make shellcheck happy
      echo "Your operating system (${os}) is currently not supported by this type (${__type##*/})." >&2
      echo 'Please contribute an implementation for it if you can.' >&2
      exit 1
      ;;
esac

state_should=$(cat "${__object:?}/parameter/state")
if test -s "${__object:?}/explorer/value"
then
	if cmp -s "${__object:?}/parameter/value" "${__object:?}/explorer/value"
	then
		state_is=present
	else
		state_is=different
	fi
else
	state_is=absent
fi

if test "${state_should}" = "${state_is}"
then
	# nothing to do, move along
	exit 0
fi

if test -f "${__object:?}/parameter/key"
then
	key=$(cat "${__object:?}/parameter/key")
else
	key=${__object_id:?}
fi
value=$(cat "${__object:?}/parameter/value")

case ${state_should}
in
	(present)
		printf 'postconf -e %s=%s\n' "$(shquot "${key}")" "$(shquot "${value}")"

		printf 'set %s=%s\n' "${key}" "${value}" >>"${__messages_out:?}"
		;;
	(absent)
		# revert parameter to its default value
		printf 'postconf -# %s\n' "$(shquot "${key}")"

		printf 'removed %s\n' "${key}" >>"${__messages_out:?}"
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac
